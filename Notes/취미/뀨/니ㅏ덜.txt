HamYuRa
꿈꾸는 미래의 웹개발자
홈페이지 제작 사용 언어
Python(Django), HTML, CSS(Bootstrap), JavaScript
참고한 곳
Djangogirls, w3schools, google search
사용 프로프램
pycharm community, visual studio code


이메일:yuraham@naver.com / hyrfortheweb@gmail.com


-설명 적기(사용법, 진행하면서 어려웠던 점 등등)
timer
1. 타이머의 모래시계 그림 부분을 클릭한다.
2. 뜨는 창에 지정할 시간을 입력한다.
3. 시작 버튼을 누른다.
>4. 모든 시간이 끝나면 stop 글씨와 함께 종료된다.

>-정지 버튼 클릭 시 일시정지를 할 수 있다.
-재시작 버튼 클릭 시 모든 시간 설정이 리셋된다.
-시간 설정은 꼭 01:03의 형태가 아니어도 된다.
	1:3 > 01:03
	0:3 > 00:03
	:3 > 00:03
>-단, 시간 설정 시 ':'와 뒤의 숫자는 필수.
-최대 시간은 15:00, 최소 시간은 00:01


진행하면서 어려웠던 점(버튼)
-가장 어려웠던 점은 다름 아닌 수학공식의 적용이었습니다.
 timer의 모래시계 속 모래가 시간이 가는 것에 따라 y의 값이 변환이 되어야 하는데, 이는 비율로 적용해야 했습니다.
 비율의 공식은 선생님께서 도와주셨는데 'y의 높이=(현재 시간*처음 높이)/입력시간'이라는 공식을 어떻게 대입해야 할지 한참을 고민했었습니다. 답은 다 나와있었는데도요!
 백분율이 필요한가 고민도 해보고, 퍼센트도 구해보고. 여러 가지 일을 해보다 결국 처음으로 돌아와 저 공식을 곰곰이 고민해 봤습니다. 그리고 깨달았죠. 저게 정답 그 자체라는걸.
 그 뒤로도 한참을 헤맸습니다. 비록 간단하고도 일상생활에 많이 쓰이는 공식이지만 가우스의 공식, 사칙연산 등을 제외하고 수학 공식을 이렇게 본격적으로 코드에 사용하는 건 처음이었으니까요.

 어느 정도 감을 잡아가자 두 번째 문제가 생겼었습니다. 수학 공식처럼 아주 헷갈리는게 아닌 그래도 감은 오지만 조금 헤맸던 문제. 현재 흘러간 시간의 값을 어떻게 가져와야 할지. 그리고 또 한참을 구글링과 더불어 W2Schools의 내용을 읽어보다 방법을 찾았습니다. 바로 전역 변수 스코프를 이용하는 방법이었죠.
 아직 제가 전역 변수 스코프와 지역 변수 스코프라는 기초에 약하다는 증거처럼 다가왔습니다. 조금 더 열심히 해야겠지요.
 먼저 전역 스코프로 변수를 선언한 뒤, 나중에 현재 시간을 구하는 함수를 작성할 때 변수에 값을 넣어주는 걸로 간단히 해결했습니다.

 이 포트폴리오를 작성하면서 가장 먼저 만들었던 프로그램인 만큼, 완성했을 때의 기쁨은 아직도 잊을 수 없습니다. 물론 부족한 점도 있고, 아직 보완해야 할 곳도 많다는 걸 잊지 않았습니다.
 주기적으로 업데이트 예정입니다.

-2018.08.31
 

Canvas
1. 캔버스 화면에 마우스를 클릭 후 움직이면 선이 그려진다.
2. Eraser 버튼 클릭 시 자동으로 #fff 색으로 변경, 지우개로써 활용할 수 있다.
3. Delete 버튼 클릭 시 화면이 초기화된다.
4. BrushSize의 1~8 버튼 클릭 시 각각의 브러시 사이즈로 변경된다.
5. Brush Color의 Red, Green, Blue의 값 변경 시 브러시 색상 또한 변경된다.
6. 이미지는 그림을 그린 캔버스의 우 클릭 후 다른 이름으로 저장을 이용한다.

진행하면서 어려웠던 점(버튼)
가장 진행하면서 어려웠던 점은 뭐니뭐니해도 선을 긋는 것이었습니다.
처음엔 W3shcools의 게임 예제를 진행했던 것을 바탕으로 캔버스를 만들어 보려 했었는데 선을 빠르게 그리지 않으면 다 점으로써 띄어 나오는 것 때문에 한참을 고민했습니다.
선생님께서 무브투로써 캔버스에 선을 긋는 것에 대한 힌트를 주셔서 한참을 고민하고 또 해보다 결국 구글링을 통해 또 힌트를 얻어 진행할 수 있었습니다.

게다가 색상을 바꿀 때 헥사에서 rgb로, rgb에서 헥사로 가는 것이 생각보다 복잡해 한참을 또 헤맸었습니다.
이를 변경하는 데엔 제가 알지못했던 새로운 방식과 기존의 제가 알던 것들이 조합되어야 했고, 여태 내가 알지 못하는 것들이 너무 많다는 생각이 들었습니다.
종합적으로 기본적으로 배운 내용에서 응용해 나가는 게 더욱 어렵다는 걸 깨달았습니다.

-2018.08.31
 

image
1. 이미지를 불러와 미리볼 수 있습니다.
2. 불러온 이미지 클릭시 오른쪽 캔버스에 확대된 모습을 볼 수 있습니다.
3. coodinates를 통해 자신이 어디를 클릭했는지 알 수 있습니다.


진행하면서 어려웠던 점
이미지 확대는 전부터 관심이 있었습니다. 이미지 파일을 올리고, 그걸 가져다 확대시켜 본다는 게 아직 개발 극초보였던 저에게는 엄청 신선하게 다가왔습니다.
차근차근 인풋을 배우고, 이벤트를 배우다보니 어렴풋이 어떻게 진행해야 할 지 머릿속으로 그려졌습니다.

실제로 진행할 때 제일 버벅거렸던 곳은 마우스로 클릭한 곳의 좌표를 확대 화면에 불러오는 곳이었습니다.
처음에 마우스로 클릭한 곳의 좌표와 확대된 곳의 위치가 다르다는 것을 알아차리고, 이걸 어떻게 해결해야 할지 한참을 고민했었습니다. 그리고 알아냈죠.
화면에 띄워주는 이미지의 크기를 정해 놓는다 해도, 실제 마우스로 클릭한 좌표는 오리지널 사이즈로 지정된다는 것을.

그래서 결국 또다시 타이머에서 이용했던 비율을 이용해 해결해 나갔습니다. 한번 경험해 본 공식이다보니 타이머를 했을 때에 비해 그렇게 오래 걸리지는 않았었습니다.
이미지를 다룬다는 게 생각보다 어렵다는 걸 다시금 깨달았고, 그리고 그만큼 재밌다는 것도 깨달은 즐거운 시간이었습니다.